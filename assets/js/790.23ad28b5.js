(self.webpackChunk_finos_perspective_docs=self.webpackChunk_finos_perspective_docs||[]).push([[790],{9022:(e,t,n)=>{e.exports=n.p+"07c28ec7aafb1e30.js"},6728:(e,t,n)=>{e.exports=n.p+"49f4181d9df75ae5.wasm"},3790:(e,t,n)=>{n.r(t),n.d(t,{compile_perspective:()=>c,default:()=>f,websocket:()=>l,worker:()=>u});function s(e,t){return{addEventListener:function(t,n){e.push(n)},removeEventListener:function(t){let n=e.indexOf(t);n>-1&&e.splice(n,1)},postMessage:function(e){for(let n of t)n({data:e})},location:{href:""}}}function a(e){let t=[],n=[];return Function("const self = arguments[0];"+e)(s(t,n)),s(n,t)}var r=async function(){let e=await async function(){let e=new URL(n(9022),n.b);return await(await fetch(e)).text()}();if(window.location.protocol.startsWith("file")&&!window.isElectron)return console.warn("file:// protocol does not support Web Workers"),a(e);try{let t=new Blob([e],{type:"application/javascript"}),n=URL.createObjectURL(t);return new Worker(n,{type:"module"})}catch(t){return console.warn("Failed to instantiate worker, falling back to single-threaded runtime",t),a(e)}};function o(){let e,t=new Promise((t=>{e=t}));return[e,t]}async function i(e){let[t,s]=await Promise.all([fetch(new URL(n(6728),n.b)).then((e=>e instanceof Response?e.arrayBuffer():e.slice(0))),r()]),{Client:a}=await e,i=new a((e=>{let t=e.slice().buffer;s.postMessage(t,{transfer:[t]})}),(()=>{console.debug("Closing WebWorker"),s.terminate()}));return await async function(e,t){let[n,s]=o();e.addEventListener("message",(function t(s){e.removeEventListener("message",t),n(null)})),e.postMessage({cmd:"init",args:[t]},{transfer:[t]}),await s}(s,t),s.addEventListener("message",(e=>{i.handle_response(e.data)})),await i.init(),i}async function c(){let e=customElements.get("perspective-viewer");return e||(console.warn("No `<perspective-viewer>` Custom Element found, waiting"),await customElements.whenDefined("perspective-viewer"),e=customElements.get("perspective-viewer")),e.__wasm_module__}async function l(e){let t=c();return await async function(e,t){let{Client:n}=await e,s=new WebSocket(t),[a,r]=o();s.onopen=a,s.binaryType="arraybuffer",await r;let i=new n((e=>{let t=e.slice().buffer;s.send(t)}),(()=>{console.debug("Closing WebSocket"),s.close()}));return s.onmessage=e=>{i.handle_response(e.data)},await i.init(),i}(t,e)}async function u(){let e=c();return await i.call(void 0,e)}var f={websocket:l,worker:u}}}]);