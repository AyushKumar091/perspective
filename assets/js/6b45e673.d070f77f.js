(self.webpackChunk_finos_perspective_docs=self.webpackChunk_finos_perspective_docs||[]).push([[869],{9550:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var s=i(6106),r=i(9252);const t={id:"js",title:"JavaScript User Guide"},a=void 0,o={id:"js",title:"JavaScript User Guide",description:"Perspective's JavaScript library offers a configurable UI powered by a fast",source:"@site/docs/js.md",sourceDirName:".",slug:"/js",permalink:"/docs/js",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"js",title:"JavaScript User Guide"},sidebar:"tutorialSidebar",next:{title:"Python User Guide",permalink:"/docs/python"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"From NPM (Node.js)",id:"from-npm-nodejs",level:3},{value:"From NPM (Browser)",id:"from-npm-browser",level:3},{value:"Via bundlers (optional)",id:"via-bundlers-optional",level:4},{value:"Webpack",id:"webpack",level:5},{value:"<code>esbuild</code>",id:"esbuild",level:5},{value:"From CDN",id:"from-cdn",level:3},{value:"Module Structure",id:"module-structure",level:2},{value:"Which modules should I import?",id:"which-modules-should-i-import",level:3},{value:"<code>perspective</code> data engine library",id:"perspective-data-engine-library",level:2},{value:"Importing in the browser",id:"importing-in-the-browser",level:3},{value:"Instantiating a new <code>worker()</code>",id:"instantiating-a-new-worker",level:4},{value:"Importing in Node.js",id:"importing-in-nodejs",level:3},{value:"Serializing data using <code>to_*()</code>",id:"serializing-data-using-to_",level:3},{value:"Deleting a <code>table()</code> or <code>view()</code>",id:"deleting-a-table-or-view",level:3},{value:"<code>perspective-viewer</code> web component library",id:"perspective-viewer-web-component-library",level:2},{value:"Theming",id:"theming",level:3},{value:"Loading data into <code>&lt;perspective-viewer&gt;</code>",id:"loading-data-into-perspective-viewer",level:3},{value:"Sharing a <code>table()</code> between multiple <code>perspective-viewer</code>s",id:"sharing-a-table-between-multiple-perspective-viewers",level:3},{value:"Server-only via <code>WebSocketServer()</code> and Node.js",id:"server-only-via-websocketserver-and-nodejs",level:3},{value:"Persistent <code>&lt;perspective-viewer&gt;</code> configuration via <code>save()</code>/<code>restore()</code>.",id:"persistent-perspective-viewer-configuration-via-saverestore",level:3},{value:"Serializing and deserializing the viewer state",id:"serializing-and-deserializing-the-viewer-state",level:4},{value:"Updating individual properties",id:"updating-individual-properties",level:4},{value:"Update events",id:"update-events",level:3},{value:"Click events",id:"click-events",level:3}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Perspective's JavaScript library offers a configurable UI powered by a fast\nstreaming data engine. Developers are able to pick and choose the modules they\nrequire for their use case, and users are presented with a clean user interface\nthrough which to analyze data."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/finos/perspective/tree/master/examples",children:"More Examples"})," are\navailable on GitHub."]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.p,{children:["Perspective releases contain several different builds for easy usage in most\nenvironments, either via NPM with or without a bundler, or via ",(0,s.jsx)(n.code,{children:"<script>"}),' tag\nfrom a CDN or asset server of your choice. Depending on which build you choose,\ndue to the presence of both WebAssembly and WebWorkers, the installation process\nfor Perspective may be somewhat more complex than most "pure" Javascript\nlibraries if you want to achieve optimal initial load-time performance.']}),"\n",(0,s.jsx)(n.h3,{id:"from-npm-nodejs",children:"From NPM (Node.js)"}),"\n",(0,s.jsx)(n.p,{children:"To use Perspective from a Node.js server, simply install via NPM."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ npm add @finos/perspective\n"})}),"\n",(0,s.jsx)(n.h3,{id:"from-npm-browser",children:"From NPM (Browser)"}),"\n",(0,s.jsxs)(n.p,{children:["For using Perspective as a dependency in a ",(0,s.jsx)(n.code,{children:"webpack"})," (or other bundler) app,\nPerspective's WebAssembly data engine is available via NPM in the same package,\n",(0,s.jsx)(n.code,{children:"@finos/perspective"}),". For the ",(0,s.jsx)(n.code,{children:"@finos/perspective-viewer"})," UI, a few additional\npackages are required:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ npm add @finos/perspective @finos/perspective-viewer @finos/perspective-viewer-d3fc @finos/perspective-viewer-datagrid\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Perspective requires the browser to have access to Perspective's ",(0,s.jsx)(n.code,{children:".worker.js"}),"\nand ",(0,s.jsx)(n.code,{children:".wasm"})," assets ",(0,s.jsx)(n.em,{children:"in addition"})," to the bundled ",(0,s.jsx)(n.code,{children:".js"})," scripts. By default,\nPerspective ",(0,s.jsx)("a",{href:"https://github.com/finos/perspective/pull/870",children:"inlines"}),"\nthese assets into the ",(0,s.jsx)(n.code,{children:".js"})," scripts, and delivers them in one file. This has no\nruntime performance impact, but does increase asset load time. Most apps should\nmake use of ",(0,s.jsx)(n.code,{children:"@finos/perspective-webpack-plugin"})," which will package these files\ncorrectly form your existing Webpack configuration."]}),"\n",(0,s.jsx)(n.h4,{id:"via-bundlers-optional",children:"Via bundlers (optional)"}),"\n",(0,s.jsxs)(n.p,{children:["When importing ",(0,s.jsx)(n.code,{children:"perspective"})," from NPM modules for a browser application, you may\nchoose to use a provided bundler plugin to manage the ",(0,s.jsx)(n.code,{children:".worker.js"})," and ",(0,s.jsx)(n.code,{children:".wasm"}),"\nassets for you. Doing so will improve your application's initial load\nperformance, as the plugin-assisted bundle version of Perspective:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Downloads ",(0,s.jsx)(n.code,{children:".wasm"})," and ",(0,s.jsx)(n.code,{children:".js"})," assets in parallel."]}),"\n",(0,s.jsxs)(n.li,{children:["Compiles ",(0,s.jsx)(n.code,{children:".wasm"})," incrementally via\n",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming",children:"streaming instantiation"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"overall bundle size is ~20% smaller (due to bas64 encoding overhead)."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Perspective comes with bundler plugins for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"esbuild"})," via ",(0,s.jsx)(n.code,{children:"@finos/perspective-esbuild-plugin"})]}),"\n",(0,s.jsxs)(n.li,{children:["Webpack via ",(0,s.jsx)(n.code,{children:"@finos/perspective-webpack-plugin"})]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"webpack",children:"Webpack"}),"\n",(0,s.jsxs)(n.p,{children:["The plugin handles downloading and packaging Perspective's additional assets,\nand is easy to set up in your ",(0,s.jsx)(n.code,{children:"webpack.config"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const PerspectivePlugin = require("@finos/perspective-webpack-plugin");\n\nmodule.exports = {\n    entry: "./in.js",\n    output: {\n        filename: "out.js",\n        path: "build",\n    },\n    plugins: [new PerspectivePlugin()],\n};\n'})}),"\n",(0,s.jsx)(n.h5,{id:"esbuild",children:(0,s.jsx)(n.code,{children:"esbuild"})}),"\n",(0,s.jsxs)(n.p,{children:["Applications bundled with ",(0,s.jsx)(n.code,{children:"esbuild"})," can make use of the\n",(0,s.jsx)(n.code,{children:"@finos/perspective-esbuild-plugin"})," module. A full example can be found in the\nrepo under\n",(0,s.jsx)(n.a,{href:"https://github.com/finos/perspective/tree/master/examples/esbuild-example",children:(0,s.jsx)(n.code,{children:"examples/esbuild-example"})}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const esbuild = require("esbuild");\nconst {\n    PerspectiveEsbuildPlugin,\n} = require("@finos/perspective-esbuild-plugin");\n\nesbuild.build({\n    entryPoints: ["src/index.js"],\n    plugins: [PerspectiveEsbuildPlugin()],\n    format: "esm",\n    bundle: true,\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When bundling via ",(0,s.jsx)(n.code,{children:"esbuild"}),", you must also"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use the ",(0,s.jsx)(n.code,{children:'type="module"'})," attribute in your app's ",(0,s.jsx)(n.code,{children:"<script>"})," tag, as this\nbuild mode is only supported via ES modules."]}),"\n",(0,s.jsxs)(n.li,{children:["Use the direct imports for the ",(0,s.jsx)(n.code,{children:"esm"})," versions Perspective, specifically\n",(0,s.jsx)(n.code,{children:"@finos/perspective/dist/esm/perspective.js"})," and\n",(0,s.jsx)(n.code,{children:"@finos/perspective-viewer/dist/esm/perspective-viewer.js"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"from-cdn",children:"From CDN"}),"\n",(0,s.jsxs)(n.p,{children:["Perspective can be loaded directly from most CDNs, such as\n",(0,s.jsx)(n.a,{href:"https://www.jsdelivr.com/package/npm/@finos/perspective-viewer",children:"jsdelivr.com"}),",\nwhich is the easiest way to get started with Perspective in the browser, and\nperfect for spinning up quick instances of ",(0,s.jsx)(n.code,{children:"perspective-viewer"})," without\ninstalling or bundling."]}),"\n",(0,s.jsxs)(n.p,{children:["While CDNs are great for development builds and small apps, for production usage\nyou should incorporate Perspective into your application with a bundler like\n",(0,s.jsx)(n.code,{children:"Webpack"}),", described above."]}),"\n",(0,s.jsxs)(n.p,{children:["This build separates out Perspective's JavaScript, WebAssembly and various\nassets into individual files, allowing the browser to load them lazily, in\nparallel or not at all if needed. To use this build, you must include the\nperspective asset files in a script tag with the ",(0,s.jsx)(n.code,{children:'type="module"'})," attribute set."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<script\n    type="module"\n    src="https://cdn.jsdelivr.net/npm/@finos/perspective/dist/cdn/perspective.js"\n><\/script>\n<script\n    type="module"\n    src="https://cdn.jsdelivr.net/npm/@finos/perspective-viewer/dist/cdn/perspective-viewer.js"\n><\/script>\n<script\n    type="module"\n    src="https://cdn.jsdelivr.net/npm/@finos/perspective-viewer-datagrid/dist/cdn/perspective-viewer-datagrid.js"\n><\/script>\n<script\n    type="module"\n    src="https://cdn.jsdelivr.net/npm/@finos/perspective-viewer-d3fc/dist/cdn/perspective-viewer-d3fc.js"\n><\/script>\n\n<link\n    rel="stylesheet"\n    crossorigin="anonymous"\n    href="https://cdn.jsdelivr.net/npm/@finos/perspective-viewer/dist/css/pro.css"\n/>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When using the ESM build, there is no global ",(0,s.jsx)(n.code,{children:"perspective"})," symbol, so you must\nimport the ",(0,s.jsx)(n.code,{children:"@finos/perspective"})," module in a ",(0,s.jsx)(n.code,{children:'type="module"'})," script as well:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<script type="module">\n    import perspective from "https://cdn.jsdelivr.net/npm/@finos/perspective/dist/cdn/perspective.js";\n    const worker = await perspective.worker();\n    const table = worker.table({ x: [1, 2, 3, 4, 5] });\n    document.querySelector("perspective-viewer").load(table);\n<\/script>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"module-structure",children:"Module Structure"}),"\n",(0,s.jsx)(n.p,{children:"Perspective is designed for flexibility, allowing developers to pick and choose\nwhich modules they need for their specific use case. The main modules are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective"}),(0,s.jsx)(n.br,{}),"\n","The data engine library, as both a browser ES6 and Node.js module. Provides\na WebAssembly, WebWorker (browser) and Process (node.js) runtime."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective-viewer"}),(0,s.jsx)(n.br,{}),"\n","A user-configurable visualization widget, bundled as a\n",(0,s.jsx)(n.a,{href:"https://www.webcomponents.org/introduction",children:"Web Component"}),". This module\nincludes the core data engine module as a dependency."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," by itself only implements a trivial debug renderer, which\nprints the currently configured ",(0,s.jsx)(n.code,{children:"view()"})," as a CSV. Plugin modules for popular\nJavaScript libraries, such as ",(0,s.jsx)(n.a,{href:"https://d3fc.io/",children:"d3fc"}),", are packaged separately\nand must be imported individually."]}),"\n",(0,s.jsx)(n.p,{children:"Perspective offers these plugin modules:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective-viewer-datagrid"}),(0,s.jsx)(n.br,{}),"\n","A custom high-performance data-grid component based on HTML ",(0,s.jsx)(n.code,{children:"<table>"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective-viewer-d3fc"}),(0,s.jsx)(n.br,{}),"\n","A ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," plugin for the ",(0,s.jsx)(n.a,{href:"https://d3fc.io",children:"d3fc"})," charting\nlibrary."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When imported after ",(0,s.jsx)(n.code,{children:"@finos/perspective-viewer"}),", the plugin modules will\nregister themselves automatically, and the renderers they export will be\navailable in the ",(0,s.jsx)(n.code,{children:"plugin"})," dropdown in the ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," UI."]}),"\n",(0,s.jsx)(n.h3,{id:"which-modules-should-i-import",children:"Which modules should I import?"}),"\n",(0,s.jsx)(n.p,{children:"Depending on your requirements, you may need just one, or all, Perspective\nmodules. Here are some basic guidelines to help you decide what is most\nappropriate for your project:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"For Perspective's high-performance streaming data engine (in WebAssembly),\nor for a purely Node.js based application, import:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective"}),", as detailed ",(0,s.jsx)(n.a,{href:"#perspective-library",children:"here"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"For Perspective as a simple, browser-based data visualization widget, you\nwill need to import:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective"}),", detailed ",(0,s.jsx)(n.a,{href:"#perspective-library",children:"here"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective-viewer"}),", detailed\n",(0,s.jsx)(n.a,{href:"#perspective-viewer-web-component",children:"here"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective-viewer-datagrid"})," for data grids"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective-viewer-d3fc"})," for charting"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["For more complex cases, such as\n",(0,s.jsx)(n.a,{href:"#sharing-a-table-between-multiple-perspective-viewers",children:"sharing tables between viewers"}),"\nand\n",(0,s.jsx)(n.a,{href:"#remote-perspective-via-workerhost",children:"binding a viewer to a remote view in Node.js"}),",\nyou will likely need all Perspective modules."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"perspective-data-engine-library",children:[(0,s.jsx)(n.code,{children:"perspective"})," data engine library"]}),"\n",(0,s.jsxs)(n.p,{children:["As a library, ",(0,s.jsx)(n.code,{children:"perspective"})," provides a suite of streaming pivot, aggregate,\nfilter and sort operations for tabular data. The engine can be instantiated in\nprocess or in a Web Worker (browser only); in both cases, ",(0,s.jsx)(n.code,{children:"perspective"})," exports\na nearly identical API."]}),"\n",(0,s.jsx)(n.p,{children:"It exports Perspective's data interfaces:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"table()"}),": an interface over a single dataset, used to input static and\nstreaming data into Perspective.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In the browser, ",(0,s.jsx)(n.code,{children:"table()"}),"s live in a Web Worker to isolate their runtime\nfrom the renderer."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"view()"}),": a continuous query of a ",(0,s.jsx)(n.code,{children:"table()"}),", used to read data and calculate\nanalytics from a ",(0,s.jsx)(n.code,{children:"table()"}),".","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"view()"}),"s also live in a Web Worker when used in a browser."]}),"\n",(0,s.jsxs)(n.li,{children:["A single ",(0,s.jsx)(n.code,{children:"table()"})," may have many ",(0,s.jsx)(n.code,{children:"view()"}),"s attached at once."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@finos/perspective"})," also exports process management functions, such as\n",(0,s.jsx)(n.code,{children:"worker()"})," and ",(0,s.jsx)(n.code,{children:"websocket()"})," (in the browser) and ",(0,s.jsx)(n.code,{children:"WebSocketServer()"})," (in\nNode.js). See the\n",(0,s.jsx)(n.a,{href:"%5B/obj/perspective.md%5D(https://docs.rs/perspective-js/latest/perspective_js/)",children:"API documentation"}),"\nfor a complete reference on all exported methods. This module is a dependency of\n",(0,s.jsx)(n.code,{children:"@finos/perspective-viewer"}),", and is not needed if you only intend to use\n",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," to visualize simple data."]}),"\n",(0,s.jsx)(n.h3,{id:"importing-in-the-browser",children:"Importing in the browser"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"perspective"})," can be imported as an ES6 module and/or ",(0,s.jsx)(n.code,{children:"require"})," syntax if you're\nusing a bundler such as ESBuild (and the ",(0,s.jsx)(n.code,{children:"@finos/perspective-esbuild-plugin"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import perspective from "@finos/perspective";\n'})}),"\n",(0,s.jsxs)(n.h4,{id:"instantiating-a-new-worker",children:["Instantiating a new ",(0,s.jsx)(n.code,{children:"worker()"})]}),"\n",(0,s.jsxs)(n.p,{children:["Once imported, you'll need to instantiate a ",(0,s.jsx)(n.code,{children:"perspective"})," engine via the\n",(0,s.jsx)(n.code,{children:"worker()"})," method. This will create a new Web Worker (browser) or Process\n(Node.js) and load the WebAssembly binary; all calculation and data accumulation\nwill occur in this separate process."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const worker = await perspective.worker();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"worker"})," symbol will expose the full ",(0,s.jsx)(n.code,{children:"perspective"})," API for one managed Web\nWorker process. You are free to create as many as your browser supports, but be\nsure to keep track of the ",(0,s.jsx)(n.code,{children:"worker"})," instances themselves, as you'll need them to\ninteract with your data in each instance."]}),"\n",(0,s.jsx)(n.h3,{id:"importing-in-nodejs",children:"Importing in Node.js"}),"\n",(0,s.jsxs)(n.p,{children:["The Node.js runtime for the ",(0,s.jsx)(n.code,{children:"@finos/perspective"})," module runs in-process by\ndefault and does not implement a ",(0,s.jsx)(n.code,{children:"child_process"})," interface. Hence, there is no\n",(0,s.jsx)(n.code,{children:"worker()"})," method, and the module object itself directly exports the full\n",(0,s.jsx)(n.code,{children:"perspective"})," API."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const perspective = require("@finos/perspective");\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In Node.js, perspective does not run in a WebWorker (as this API does not exist\nin Node.js), so no need to call the ",(0,s.jsx)(n.code,{children:".worker()"})," factory function - the\n",(0,s.jsx)(n.code,{children:"perspective"})," library exports the functions directly and run synchronously in\nthe main process."]}),"\n",(0,s.jsxs)(n.h3,{id:"serializing-data-using-to_",children:["Serializing data using ",(0,s.jsx)(n.code,{children:"to_*()"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"view()"})," allows for serialization of data to the user through the\n",(0,s.jsx)(n.code,{children:"to_json()"}),", ",(0,s.jsx)(n.code,{children:"to_columns()"}),", ",(0,s.jsx)(n.code,{children:"to_csv()"}),", and ",(0,s.jsx)(n.code,{children:"to_arrow()"})," methods. These methods\nreturn a ",(0,s.jsx)(n.code,{children:"promise"})," for the calculated data:"]}),"\n",(0,s.jsxs)(n.p,{children:["Via ",(0,s.jsx)(n.code,{children:"Promise"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// an array of objects representing each row\nview.to_json().then((json) => console.log(json));\n\n// an object of arrays representing each column\nview.to_columns().then((json) => console.log(json));\n\n// a CSV-formatted string\nview.to_csv().then((csv) => console.log(csv));\n\n// an Arrow binary serialized to ArrayBuffer\nview.to_arrow().then((arrow) => console.log(arrow));\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Via ",(0,s.jsx)(n.code,{children:"await"}),"/",(0,s.jsx)(n.code,{children:"async"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function print_data() {\n    console.log(await view.to_json());\n    console.log(await view.to_columns());\n    console.log(await view.to_csv());\n    console.log(await view.to_arrow());\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"deleting-a-table-or-view",children:["Deleting a ",(0,s.jsx)(n.code,{children:"table()"})," or ",(0,s.jsx)(n.code,{children:"view()"})]}),"\n",(0,s.jsxs)(n.p,{children:["Unlike standard JavaScript objects, Perspective objects such as ",(0,s.jsx)(n.code,{children:"table()"})," and\n",(0,s.jsx)(n.code,{children:"view()"})," store their associated data in the WebAssembly heap. Because of this,\nas well as the current lack of a hook into the JavaScript runtime's garbage\ncollector from WebAssembly, the memory allocated to these Perspective objects\ndoes not automatically get cleaned up when the object falls out of scope."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to prevent memory leaks and reclaim the memory associated with a\nPerspective ",(0,s.jsx)(n.code,{children:"table()"})," or ",(0,s.jsx)(n.code,{children:"view()"}),", you must call the ",(0,s.jsx)(n.code,{children:"delete()"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"await view.delete();\n\n// This method will throw an exception if there are still `view()`s depending\n// on this `table()`!\nawait table.delete();\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"perspective-viewer-web-component-library",children:[(0,s.jsx)(n.code,{children:"perspective-viewer"})," web component library"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," provides a complete graphical UI for configuring the\n",(0,s.jsx)(n.code,{children:"perspective"})," library and formatting its output to the provided visualization\nplugins."]}),"\n",(0,s.jsxs)(n.p,{children:["If you are using ",(0,s.jsx)(n.code,{children:"esbuild"})," or another bundler which supports ES6 modules, you\nonly need to import the ",(0,s.jsx)(n.code,{children:"perspective-viewer"})," libraries somewhere in your\napplication - these modules export nothing, but rather register the components\nfor use within your site's regular HTML:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import "@finos/perspective-viewer";\nimport "@finos/perspective-viewer-datagrid";\nimport "@finos/perspective-viewer-d3fc";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Once imported, the ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," Web Component will be available in any\nstandard HTML on your site. A simple example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<perspective-viewer id="view1"></perspective-viewer>\n'})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const viewer = document.createElement("perspective-viewer");\n'})}),"\n",(0,s.jsx)(n.h3,{id:"theming",children:"Theming"}),"\n",(0,s.jsxs)(n.p,{children:["Theming is supported in ",(0,s.jsx)(n.code,{children:"perspective-viewer"})," and its accompanying plugins. A\nnumber of themes come bundled with ",(0,s.jsx)(n.code,{children:"perspective-viewer"}),"; you can import any of\nthese themes directly into your app, and the ",(0,s.jsx)(n.code,{children:"perspective-viewer"}),"s will be\nthemed accordingly:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Themes based on Thought Merchants\'s Prospective design\nimport "@finos/perspective-viewer/dist/css/pro.css";\nimport "@finos/perspective-viewer/dist/css/pro-dark.css";\n\n// Other themes\nimport "@finos/perspective-viewer/dist/css/solarized.css";\nimport "@finos/perspective-viewer/dist/css/solarized-dark.css";\nimport "@finos/perspective-viewer/dist/css/monokai.css";\nimport "@finos/perspective-viewer/dist/css/vaporwave.css";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively, you may use ",(0,s.jsx)(n.code,{children:"themes.css"}),", which bundles all default themes"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import "@finos/perspective-viewer/dist/css/themes.css";\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you choose not to bundle the themes yourself, they are available through\n",(0,s.jsx)(n.a,{href:"https://cdn.jsdelivr.net/npm/@finos/perspective-viewer/dist/css/",children:"CDN"}),". These\ncan be directly linked in your HTML file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<link\n    rel="stylesheet"\n    crossorigin="anonymous"\n    href="https://cdn.jsdelivr.net/npm/@finos/perspective-viewer/dist/css/pro.css"\n/>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Note the ",(0,s.jsx)(n.code,{children:'crossorigin="anonymous"'})," attribute. When including a theme from a\ncross-origin context, this attribute may be required to allow\n",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," to detect the theme. If this fails, additional themes are\nadded to the ",(0,s.jsx)(n.code,{children:"document"})," after ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," init, or for any other\nreason theme auto-detection fails, you may manually inform\n",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," of the available theme names with the ",(0,s.jsx)(n.code,{children:".resetThemes()"}),"\nmethod."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// re-auto-detect themes\nviewer.resetThemes();\n\n// Set available themes explicitly (they still must be imported as CSS!)\nviewer.resetThemes(["Pro Light", "Pro Dark"]);\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," will default to the first loaded theme when initialized.\nYou may override this via ",(0,s.jsx)(n.code,{children:".restore()"}),", or provide an initial theme by setting\nthe ",(0,s.jsx)(n.code,{children:"theme"})," attribute:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<perspective-viewer theme="Pro Light"></perspective-viewer>\n'})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const viewer = document.querySelector("perspective-viewer");\nawait viewer.restore({ theme: "Pro Dark" });\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"loading-data-into-perspective-viewer",children:["Loading data into ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})]}),"\n",(0,s.jsxs)(n.p,{children:["Data can be loaded into ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," in the form of a ",(0,s.jsx)(n.code,{children:"Table()"})," or a\n",(0,s.jsx)(n.code,{children:"Promise<Table>"})," via the ",(0,s.jsx)(n.code,{children:"load()"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Create a new worker, then a new table promise on that worker.\nconst worker = await perspective.worker();\nconst table = await worker.table(data);\n\n// Bind a viewer element to this table.\nawait viewer.load(table);\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"sharing-a-table-between-multiple-perspective-viewers",children:["Sharing a ",(0,s.jsx)(n.code,{children:"table()"})," between multiple ",(0,s.jsx)(n.code,{children:"perspective-viewer"}),"s"]}),"\n",(0,s.jsxs)(n.p,{children:["Multiple ",(0,s.jsx)(n.code,{children:"perspective-viewer"}),"s can share a ",(0,s.jsx)(n.code,{children:"table()"})," by passing the ",(0,s.jsx)(n.code,{children:"table()"}),"\ninto the ",(0,s.jsx)(n.code,{children:"load()"})," method of each viewer. Each ",(0,s.jsx)(n.code,{children:"perspective-viewer"})," will update\nwhen the underlying ",(0,s.jsx)(n.code,{children:"table()"})," is updated, but ",(0,s.jsx)(n.code,{children:"table.delete()"})," will fail until\nall ",(0,s.jsx)(n.code,{children:"perspective-viewer"})," instances referencing it are also deleted:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const viewer1 = document.getElementById("viewer1");\nconst viewer2 = document.getElementById("viewer2");\n\n// Create a new WebWorker\nconst worker = await perspective.worker();\n\n// Create a table in this worker\nconst table = await worker.table(data);\n\n// Load the same table in 2 different <perspective-viewer> elements\nawait viewer1.load(table);\nawait viewer2.load(table);\n\n// Both `viewer1` and `viewer2` will reflect this update\nawait table.update([{ x: 5, y: "e", z: true }]);\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"server-only-via-websocketserver-and-nodejs",children:["Server-only via ",(0,s.jsx)(n.code,{children:"WebSocketServer()"})," and Node.js"]}),"\n",(0,s.jsxs)(n.p,{children:["For exceptionally large datasets, a ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," can be bound to a\n",(0,s.jsx)(n.code,{children:"perspective.table()"})," instance running in Node.js remotely, rather than creating\none in a Web Worker and downloading the entire data set. This trades off network\nbandwidth and server resource requirements for a smaller browser memory and CPU\nfootprint."]}),"\n",(0,s.jsx)(n.p,{children:"In Node.js:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const { WebSocketServer, table } = require("@finos/perspective");\nconst fs = require("fs");\n\n// Start a WS/HTTP host on port 8080.  The `assets` property allows\n// the `WebSocketServer()` to also serves the file structure rooted in this\n// module\'s directory.\nconst host = new WebSocketServer({ assets: [__dirname], port: 8080 });\n\n// Read an arrow file from the file system and host it as a named table.\nconst arr = fs.readFileSync(__dirname + "/superstore.lz4.arrow");\nawait table(arr, { name: "table_one" });\n'})}),"\n",(0,s.jsx)(n.p,{children:"In the browser:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const elem = document.getElementsByTagName("perspective-viewer")[0];\n\n// Bind to the server\'s worker instead of instantiating a Web Worker.\nconst websocket = await perspective.websocket(\n    window.location.origin.replace("http", "ws")\n);\n\n// Bind the viewer to the preloaded data source.  `table` and `view` objects\n// live on the server.\nconst server_table = await websocket.open_table("table_one");\nawait elem.load(server_table);\n\n// Or load data from a table using a view. The browser now also has a copy of\n// this view in its own `table`, as well as its updates transferred to the\n// browser using Apache Arrow.\nconst worker = await perspective.worker();\nconst server_view = await server_table.view();\nconst client_table = worker.table(server_view);\nawait elem.load(client_table);\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," instances bound in this way are otherwise no different\nthan ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"}),"s which rely on a Web Worker, and can even share a\nhost application with Web Worker-bound ",(0,s.jsx)(n.code,{children:"table()"}),"s. The same ",(0,s.jsx)(n.code,{children:"promise"}),"-based API\nis used to communicate with the server-instantiated ",(0,s.jsx)(n.code,{children:"view()"}),", only in this case\nit is over a websocket."]}),"\n",(0,s.jsxs)(n.h3,{id:"persistent-perspective-viewer-configuration-via-saverestore",children:["Persistent ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," configuration via ",(0,s.jsx)(n.code,{children:"save()"}),"/",(0,s.jsx)(n.code,{children:"restore()"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," is ",(0,s.jsx)(n.em,{children:"persistent"}),", in that its entire state (sans the data\nitself) can be serialized or deserialized. This include all column, filter,\npivot, expressions, etc. properties, as well as datagrid style settings, config\npanel visibility, and more. This overloaded feature covers a range of use cases:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Setting a ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"}),"'s initial state after a ",(0,s.jsx)(n.code,{children:"load()"})," call."]}),"\n",(0,s.jsx)(n.li,{children:"Updating a single or subset of properties, without modifying others."}),"\n",(0,s.jsx)(n.li,{children:"Resetting some or all properties to their data-relative default."}),"\n",(0,s.jsxs)(n.li,{children:["Persisting a user's configuration to ",(0,s.jsx)(n.code,{children:"localStorage"})," or a server."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"serializing-and-deserializing-the-viewer-state",children:"Serializing and deserializing the viewer state"}),"\n",(0,s.jsxs)(n.p,{children:["To retrieve the entire state as a JSON-ready JavaScript object, use the ",(0,s.jsx)(n.code,{children:"save()"}),"\nmethod. ",(0,s.jsx)(n.code,{children:"save()"})," also supports a few other formats such as ",(0,s.jsx)(n.code,{children:'"arraybuffer"'})," and\n",(0,s.jsx)(n.code,{children:'"string"'})," (base64, not JSON), which you may choose for size at the expense of\neasy migration/manual-editing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const json_token = await elem.save();\nconst string_token = await elem.save("string");\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For any format, the serialized token can be restored to any\n",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," with a ",(0,s.jsx)(n.code,{children:"Table"})," of identical schema, via the ",(0,s.jsx)(n.code,{children:"restore()"}),"\nmethod. Note that while the data for a token returned from ",(0,s.jsx)(n.code,{children:"save()"})," may differ,\ngenerally its schema may not, as many other settings depend on column names and\ntypes."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"await elem.restore(json_token);\nawait elem.restore(string_token);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["As ",(0,s.jsx)(n.code,{children:"restore()"})," dispatches on the token's type, it is important to make sure that\nthese types match! A common source of error occurs when passing a\nJSON-stringified token to ",(0,s.jsx)(n.code,{children:"restore()"}),", which will assume base64-encoded msgpack\nwhen a string token is used."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// This will error!\nawait elem.restore(JSON.stringify(json_token));\n"})}),"\n",(0,s.jsx)(n.h4,{id:"updating-individual-properties",children:"Updating individual properties"}),"\n",(0,s.jsxs)(n.p,{children:["Using the JSON format, every facet of a ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"}),"'s configuration\ncan be manipulated from JavaScript using the ",(0,s.jsx)(n.code,{children:"restore()"})," method. The valid\nstructure of properties is described via the\n",(0,s.jsx)(n.a,{href:"https://github.com/finos/perspective/blob/ebced4caa/rust/perspective-viewer/src/ts/viewer.ts#L16",children:(0,s.jsx)(n.code,{children:"ViewerConfig"})}),"\nand embedded\n",(0,s.jsx)(n.a,{href:"https://github.com/finos/perspective/blob/ebced4caa19435a2a57d4687be7e428a4efc759b/packages/perspective/index.d.ts#L140",children:(0,s.jsx)(n.code,{children:"ViewConfig"})}),"\ntype declarations, and ",(0,s.jsx)(n.a,{href:"view.md",children:(0,s.jsx)(n.code,{children:"View"})})," chapter of the documentation which has\nseveral interactive examples for each ",(0,s.jsx)(n.code,{children:"ViewConfig"})," property."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Set the plugin (will also update `columns` to plugin-defaults)\nawait elem.restore({ plugin: "X Bar" });\n\n// Update plugin and columns (only draws once)\nawait elem.restore({ plugin: "X Bar", columns: ["Sales"] });\n\n// Open the config panel\nawait elem.restore({ settings: true });\n\n// Create an expression\nawait elem.restore({\n    columns: [\'"Sales" + 100\'],\n    expressions: { "New Column": \'"Sales" + 100\' },\n});\n\n// ERROR if the column does not exist in the schema or expressions\n// await elem.restore({columns: ["\\"Sales\\" + 100"], expressions: {}});\n\n// Add a filter\nawait elem.restore({ filter: [["Sales", "<", 100]] });\n\n// Add a sort, don\'t remove filter\nawait elem.restore({ sort: [["Prodit", "desc"]] });\n\n// Reset just filter, preserve sort\nawait elem.restore({ filter: undefined });\n\n// Reset all properties to default e.g. after `load()`\nawait elem.reset();\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Another effective way to quickly create a token for a desired configuration is\nto simply copy the token returned from ",(0,s.jsx)(n.code,{children:"save()"})," after settings the view manually\nin the browser. The JSON format is human-readable and should be quite easy to\ntweak once generated, as ",(0,s.jsx)(n.code,{children:"save()"})," will return even the default settings for all\nproperties. You can call ",(0,s.jsx)(n.code,{children:"save()"})," in your application code, or e.g. through the\nChrome developer console:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Copy to clipboard\ncopy(await document.querySelector("perspective-viewer").save());\n'})}),"\n",(0,s.jsx)(n.h3,{id:"update-events",children:"Update events"}),"\n",(0,s.jsxs)(n.p,{children:["Whenever a ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"}),"s underlying ",(0,s.jsx)(n.code,{children:"table()"})," is changed via the\n",(0,s.jsx)(n.code,{children:"load()"})," or ",(0,s.jsx)(n.code,{children:"update()"})," methods, a ",(0,s.jsx)(n.code,{children:"perspective-view-update"})," DOM event is fired.\nSimilarly, ",(0,s.jsx)(n.code,{children:"view()"})," updates instigated either through the Attribute API or\nthrough user interaction will fire a ",(0,s.jsx)(n.code,{children:"perspective-config-update"})," event:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'elem.addEventListener("perspective-config-update", function (event) {\n    var config = elem.save();\n    console.log("The view() config has changed to " + JSON.stringify(config));\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"click-events",children:"Click events"}),"\n",(0,s.jsxs)(n.p,{children:["Whenever a ",(0,s.jsx)(n.code,{children:"<perspective-viewer>"}),"'s grid or chart is clicked, a\n",(0,s.jsx)(n.code,{children:"perspective-click"})," DOM event is fired containing a detail object with ",(0,s.jsx)(n.code,{children:"config"}),",\n",(0,s.jsx)(n.code,{children:"column_names"}),", and ",(0,s.jsx)(n.code,{children:"row"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"config"})," object contains an array of ",(0,s.jsx)(n.code,{children:"filters"})," that can be applied to a\n",(0,s.jsx)(n.code,{children:"<perspective-viewer>"})," through the use of ",(0,s.jsx)(n.code,{children:"restore()"})," updating it to show the\nfiltered subset of data."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"column_names"})," property contains an array of matching columns, and the ",(0,s.jsx)(n.code,{children:"row"}),"\nproperty returns the associated row data."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'elem.addEventListener("perspective-click", function (event) {\n    var config = event.detail.config;\n    elem.restore(config);\n});\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9252:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(7378);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);