import t from"@finos/perspective";import*as r from"fs";import*as s from"https";import*as i from"url";const n=i.fileURLToPath(new URL(".",import.meta.url)),e={colors:4,keywords:3,types:3};await async function(){if(r.existsSync(`${n}/all_identifiers.arrow`))return;const i=JSON.parse(await function(t){return new Promise(((r,i)=>{s.get(t,(t=>{let s="";t.on("data",(t=>{s+=t})),t.on("end",(()=>{r(s)}))})).on("error",i)}))}("https://mtgjson.com/api/v5/AllIdentifiers.json"));let{_schema:o,accessors:a}=function(t){const r={name:void 0,manaCost:void 0,convertedManaCost:void 0,types:void 0,colorIdentity:void 0,keywords:void 0},s={};for(const i of Object.keys(t)){const n=t[i];if("string"==typeof n)r[i]="string",s[i]=t=>t[i]||"-";else if("number"==typeof n)r[i]="integer",s[i]=t=>t[i]||null;else if(Array.isArray(n)){r[i]="string",s[i]=t=>(t[i]||["-"]).join(",");for(let t=0;t<(e[i]||n.length);t++){let n=t;r[`${i}_${t}`]="string",s[`${i}_${t}`]=t=>t[i]&&t[i][n]||"-"}}else console.warn(`Dropping column "${i}" from ${JSON.stringify(t[i])}`)}return{schema:r,accessors:s}}(i.data[Object.keys(i.data)[0]]);const g={name:"string",manaCost:"string",convertedManaCost:"float",types:"string",colorIdentity:"string",text:"string",keywords:"string",artist:"string",artistIds:"string",artistIds_0:"string",availability:"string",availability_0:"string",borderColor:"string",colorIdentity_0:"string",colors:"string",colors_0:"string",colors_1:"string",colors_2:"string",colors_3:"string",edhrecRank:"integer",edhrecSaltiness:"float",finishes:"string",finishes_0:"string",flavorText:"string",frameVersion:"string",keywords_0:"string",keywords_1:"string",keywords_2:"string",language:"string",layout:"string",manaValue:"integer",number:"string",power:"string",promoTypes:"string",promoTypes_0:"string",promoTypes_1:"string",promoTypes_2:"string",rarity:"string",securityStamp:"string",setCode:"string",subtypes:"string",subtypes_0:"string",supertypes:"string",toughness:"string",type:"string",types_0:"string",types_1:"string",types_2:"string",uuid:"string",scryfallId:"string"};a.scryfallId=t=>t.identifiers.scryfallId;const l=await t.table(g,{index:"uuid"});let c=[];for(const t of Object.keys(i.data)){const r=i.data[t],s={};for(const t of Object.keys(g))try{s[t]=a[t](r)}catch(d){throw console.error(t),d}c.push(s),c.length>100&&(l.update(c),c=[])}l.update(c);const y=await(await l.view()).to_arrow();r.writeFileSync(`${n}/all_identifiers.arrow`,Buffer.from(y),"binary")}();